import { promises as fs } from 'fs';
import path from 'path';
import { compileFromFile } from 'json-schema-to-typescript';

const ROOT = process.cwd();
const SCHEMA_PATH = path.join(ROOT, 'metadata', 'schema', 'canonical.schema.json');
const OUTPUT_PATH = path.join(ROOT, 'src', 'lib', 'metadata', 'generated', 'canonical.ts');

async function main() {
  const ts = await compileFromFile(SCHEMA_PATH, {
    bannerComment: `/**\n * This file is auto-generated by npm run metadata:types.\n * Do not edit directly.\n */`
  });
  const typeName = 'CanonicalPageDefinition';
  const content = `${ts}\nexport type CanonicalLayer = ${typeName}['layer'];\nexport type CanonicalRegion = NonNullable<${typeName}['page']['regions']>[number];\nexport type CanonicalComponent = NonNullable<CanonicalRegion['components']>[number];\nexport type CanonicalDataSource = NonNullable<${typeName}['page']['dataSources']>[number];\nexport type CanonicalAction = NonNullable<${typeName}['page']['actions']>[number];\n`;
  await fs.mkdir(path.dirname(OUTPUT_PATH), { recursive: true });
  await fs.writeFile(OUTPUT_PATH, content);
  console.log(`Generated ${path.relative(ROOT, OUTPUT_PATH)}`);
}

main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
