/**
 * This file is auto-generated by npm run metadata:types.
 * Do not edit directly.
 */

export type CanonicalPageDefinition = {
  [k: string]: unknown;
} & {
  schemaVersion: string;
  contentVersion: string;
  checksum: string;
  kind: "blueprint" | "overlay";
  layer: Layer;
  page: Page;
  sourcePath?: string;
};
export type PropValue = PropValueStatic | PropValueBinding | PropValueExpression | PropValueAction;

export interface Layer {
  module: string;
  route: string;
  tenant?: string | null;
  role?: string | null;
  variant?: string | null;
  locale?: string | null;
}
export interface Page {
  id?: string;
  title?: string;
  regions?: Region[];
  components?: Component[];
  dataSources?: DataSource[];
  actions?: Action[];
}
export interface Region {
  id: string;
  operation?: "merge" | "replace" | "remove";
  components?: Component[];
}
export interface Component {
  id: string;
  type?: string;
  namespace?: string;
  version?: string;
  operation?: "merge" | "replace" | "remove";
  props?: {
    [k: string]: PropValue;
  };
  children?: Component[];
  rbac?: Rbac;
}
export interface PropValueStatic {
  kind: "static";
  value: unknown;
}
export interface PropValueBinding {
  kind: "binding";
  source: string;
  path?: string | null;
  fallback?: unknown;
}
export interface PropValueExpression {
  kind: "expression";
  expression: string;
  fallback?: unknown;
}
export interface PropValueAction {
  kind: "action";
  actionId: string;
}
export interface Rbac {
  allow?: string[];
  deny?: string[];
}
export interface DataSource {
  id: string;
  kind: "static" | "supabase" | "http" | "service";
  operation?: "merge" | "replace" | "remove";
  config?: {
    [k: string]: unknown;
  };
  rbac?: Rbac;
}
export interface Action {
  id: string;
  kind: string;
  operation?: "merge" | "replace" | "remove";
  config?: {
    [k: string]: unknown;
  };
  rbac?: Rbac;
}

export type CanonicalLayer = CanonicalPageDefinition['layer'];
export type CanonicalRegion = NonNullable<CanonicalPageDefinition['page']['regions']>[number];
export type CanonicalComponent = NonNullable<CanonicalRegion['components']>[number];
export type CanonicalDataSource = NonNullable<CanonicalPageDefinition['page']['dataSources']>[number];
export type CanonicalAction = NonNullable<CanonicalPageDefinition['page']['actions']>[number];
